
module startup 1.0;

require {
	type auditd_t;
	type boot_t;
	type chronyc_exec_t;
	type crond_t;
	type dhcpc_t;
	type efivarfs_t;
	type init_t;
	type init_var_run_t;
	type initrc_t;
	type lib_t;
	type net_conf_t;
	type sshd_t;
	type syslogd_t;
	type syslogd_unit_t;
	type system_dbusd_var_lib_t;
	type systemd_gpt_generator_t;
	type systemd_logind_t;
	type systemd_tmpfiles_t;
	type systemd_unit_t;
	type udev_t;
	type var_lib_t;
	type var_run_t;
	class system status;
	class service start;
	class file { create execute execute_no_trans getattr map open read rename unlink write };
	class dir { add_name create remove_name write getattr open read search };
	class process signull;
}

#============= dhcpc_t ==============
allow dhcpc_t chronyc_exec_t:file { execute execute_no_trans map open read };
allow dhcpc_t init_t:system status;
allow dhcpc_t init_var_run_t:dir { add_name create remove_name write };
allow dhcpc_t init_var_run_t:file { create getattr open rename write };
allow dhcpc_t lib_t:file execute_no_trans;
allow dhcpc_t syslogd_unit_t:service start;
allow dhcpc_t systemd_unit_t:service start;
allow dhcpc_t var_lib_t:file { getattr unlink };

#============= sshd_t ==============
allow sshd_t var_run_t:file { getattr open read rename };

#============= syslogd_t ==============
allow syslogd_t auditd_t:process signull;
allow syslogd_t crond_t:process signull;
allow syslogd_t dhcpc_t:process signull;
allow syslogd_t initrc_t:process signull;
allow syslogd_t sshd_t:process signull;
allow syslogd_t systemd_logind_t:process signull;
allow syslogd_t udev_t:process signull;

#============= systemd_gpt_generator_t ==============
allow systemd_gpt_generator_t boot_t:dir { getattr open read };

#============= systemd_tmpfiles_t ==============
#!!!! This avc can be allowed using the boolean 'systemd_tmpfiles_manage_all'
allow systemd_tmpfiles_t system_dbusd_var_lib_t:dir read;

#============= udev_t ==============
allow udev_t efivarfs_t:dir search;
allow udev_t net_conf_t:dir create;
